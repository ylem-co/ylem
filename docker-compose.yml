services:
  ylem_database:
    env_file:
      - .env
      - .env.common
    build:
      context: .
      dockerfile: Dockerfile-db
    networks:
      - ylem_network
    command: --init-file=/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=${YLEM_DATABASE_NAME}
      - MYSQL_USER=${YLEM_DATABASE_USER}
      - MYSQL_PASSWORD=${YLEM_DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${YLEM_DATABASE_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/data:/var/lib/mysql
    container_name: ylem_database
    healthcheck:
      interval: 5s
      retries: 5
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
      timeout: 5s

  ylem_session_storage:
    env_file:
      - .env
      - .env.common
    image: "redis:alpine"
    command: redis-server --requirepass ${YLEM_REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - ylem_network
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - ./database/redis/redis.conf:/usr/local/etc/redis/redis.conf
    container_name: ylem_session_storage
    links:
      - ylem_database
    depends_on:
      ylem_database:
        condition: service_healthy

networks:
  ylem_network:
    name: ylem_network
    external: false

include:
  - api/docker-compose.yml
  - backend/users/docker-compose.yml 
  - backend/statistics/docker-compose.yml 
  - backend/integrations/docker-compose.yml 
  - backend/pipelines/docker-compose.yml 
  - processor/taskrunner/docker-compose.yml
  - processor/python_processor/docker-compose.yml
  - ui/docker-compose-dev.yml # use this one for the development environment UI 
  #- ui/docker-compose.yml # use this one for the production environment UI
  - server/docker-compose.yml
